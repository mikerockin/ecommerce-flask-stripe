services:
  db:
    image: postgres:17.4-alpine
    container_name: master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=mydata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - db_network
      - web_network
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "127.0.0.1:8080:8080"
    links:
      - "db:db"
    networks:
      - db_network
    depends_on:
      - db
  appseed-app:
    container_name: appseed_app
    restart: always
    build: .
    networks:
      - db_network
      - web_network
    environment:
      - DATABASE_URL=postgresql://postgres:1234@db:5432/mydata

    depends_on:
      - db
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - 5085:5085
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - web_network
    depends_on: 
      - appseed-app
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
       - "--config.file=/etc/prometheus/prometheus.yml"
       - "--storage.tsdb.path=/prometheus"
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - web_network
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - web_network

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:1234@db:5432/mydata?sslmode=disable
    ports:
      - 9187:9187
    networks:
      - db_network
      - web_network
    depends_on:
      - db

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    expose:
      - 3000
    ports:
     - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - web_network
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    ports:
      - 9093:9093
    networks:
      - web_network
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
    postgres-data:
    prometheus_data:
    grafana-storage:
